resource "aws_lb" "main" {n  name               = "${var.project_name}-${var.environment}-alb"n  internal           = falsen  load_balancer_type = "application"n  security_groups    = [aws_security_group.alb.id]n  subnets            = module.vpc.public_subnetsnn  enable_deletion_protection = falsenn  tags = {n    Name = "${var.project_name}-${var.environment}-alb"n  }n}nnresource "aws_lb_target_group" "python_service" {n  name     = "${var.project_name}-${var.environment}-python-tg"n  port     = 5000n  protocol = "HTTP"n  vpc_id   = module.vpc.vpc_idnn  health_check {n    enabled             = truen    healthy_threshold   = 2n    interval            = 30n    matcher             = "200"n    path                = "/api/health"n    port                = "traffic-port"n    protocol            = "HTTP"n    timeout             = 5n    unhealthy_threshold = 2n  }nn  tags = {n    Name = "${var.project_name}-${var.environment}-python-tg"n  }n}nnresource "aws_lb_target_group" "java_service" {n  name     = "${var.project_name}-${var.environment}-java-tg"n  port     = 8080n  protocol = "HTTP"n  vpc_id   = module.vpc.vpc_idnn  health_check {n    enabled             = truen    healthy_threshold   = 2n    interval            = 30n    matcher             = "200"n    path                = "/actuator/health"n    port                = "traffic-port"n    protocol            = "HTTP"n    timeout             = 5n    unhealthy_threshold = 2n  }nn  tags = {n    Name = "${var.project_name}-${var.environment}-java-tg"n  }n}nnresource "aws_lb_listener" "python_service" {n  load_balancer_arn = aws_lb.main.arnn  port              = "80"n  protocol          = "HTTP"nn  default_action {n    type             = "forward"n    target_group_arn = aws_lb_target_group.python_service.arnn  }nn  tags = {n    Name = "${var.project_name}-${var.environment}-python-listener"n  }n}nnresource "aws_lb_listener_rule" "java_service" {n  listener_arn = aws_lb_listener.python_service.arnn  priority     = 100nn  action {n    type             = "forward"n    target_group_arn = aws_lb_target_group.java_service.arnn  }nn  condition {n    path_pattern {n      values = ["/api/reviews/*", "/internal/*"]n    }n  }nn  tags = {n    Name = "${var.project_name}-${var.environment}-java-rule"n  }n}