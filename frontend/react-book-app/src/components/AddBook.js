import React, { useState } from 'react';nimport { useNavigate, Link } from 'react-router-dom';nimport { bookService } from '../services/api';nimport toast from 'react-hot-toast';nnconst AddBook = () => {n  const navigate = useNavigate();n  const [formData, setFormData] = useState({n    title: '',n    author: '',n    isbn: ''n  });n  const [loading, setLoading] = useState(false);n  const [errors, setErrors] = useState({});nn  const handleChange = (e) => {n    const { name, value } = e.target;n    setFormData(prev => ({n      ...prev,n      [name]: valuen    }));n    n    // Clear error when user starts typingn    if (errors[name]) {n      setErrors(prev => ({n        ...prev,n        [name]: ''n      }));n    }n  };nn  const validateForm = () => {n    const newErrors = {};n    n    if (!formData.title.trim()) {n      newErrors.title = 'Title is required';n    }n    n    if (!formData.author.trim()) {n      newErrors.author = 'Author is required';n    }n    n    if (!formData.isbn.trim()) {n      newErrors.isbn = 'ISBN is required';n    } else if (!/^[\d\-X]+$/.test(formData.isbn.replace(/[\s\-]/g, ''))) {n      newErrors.isbn = 'Please enter a valid ISBN';n    }n    n    setErrors(newErrors);n    return Object.keys(newErrors).length === 0;n  };nn  const handleSubmit = async (e) => {n    e.preventDefault();n    n    if (!validateForm()) {n      return;n    }nn    setLoading(true);n    n    try {n      const bookData = {n        title: formData.title.trim(),n        author: formData.author.trim(),n        isbn: formData.isbn.trim()n      };n      n      const result = await bookService.createBook(bookData);n      toast.success('Book added successfully!');n      n      // Navigate to the new book's detail pagen      if (result.book && result.book.id) {n        navigate(`/books/${result.book.id}`);n      } else {n        navigate('/books');n      }n    } catch (error) {n      toast.error('Failed to add book: ' + error.message);n    } finally {n      setLoading(false);n    }n  };nn  return (n    <div className="container">n      <div className="form-page">n        <div className="form-header">n          <Link to="/books" className="btn btn-outline">n            ‚Üê Back to Booksn          </Link>n          <h1>üìñ Add New Book</h1>n        </div>nn        <form onSubmit={handleSubmit} className="book-form">n          <div className="form-group">n            <label htmlFor="title">n              Book Title *n            </label>n            <inputn              type="text"n              id="title"n              name="title"n              value={formData.title}n              onChange={handleChange}n              placeholder="Enter book title"n              className={errors.title ? 'form-control error' : 'form-control'}n              disabled={loading}n            />n            {errors.title && <span className="error-message">{errors.title}</span>}n          </div>nn          <div className="form-group">n            <label htmlFor="author">n              Author *n            </label>n            <inputn              type="text"n              id="author"n              name="author"n              value={formData.author}n              onChange={handleChange}n              placeholder="Enter author name"n              className={errors.author ? 'form-control error' : 'form-control'}n              disabled={loading}n            />n            {errors.author && <span className="error-message">{errors.author}</span>}n          </div>nn          <div className="form-group">n            <label htmlFor="isbn">n              ISBN *n            </label>n            <inputn              type="text"n              id="isbn"n              name="isbn"n              value={formData.isbn}n              onChange={handleChange}n              placeholder="Enter ISBN (e.g., 978-0-123456-78-9)"n              className={errors.isbn ? 'form-control error' : 'form-control'}n              disabled={loading}n            />n            {errors.isbn && <span className="error-message">{errors.isbn}</span>}n            <small className="form-hint">n              International Standard Book Numbern            </small>n          </div>nn          <div className="form-actions">n            <buttonn              type="button"n              onClick={() => navigate('/books')}n              className="btn btn-outline"n              disabled={loading}n            >n              Canceln            </button>n            <buttonn              type="submit"n              className="btn btn-primary"n              disabled={loading}n            >n              {loading ? 'Adding Book...' : 'Add Book'}n            </button>n          </div>n        </form>n      </div>n    </div>n  );n};nnexport default AddBook;