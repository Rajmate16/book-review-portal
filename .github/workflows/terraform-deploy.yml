name: Terraform Deploy to AWSnnon:n  push:n    branches: [ main, develop ]n    paths:n      - 'terraform/**'n      - '.github/workflows/terraform-deploy.yml'n  pull_request:n    branches: [ main ]n    paths:n      - 'terraform/**'n      - '.github/workflows/terraform-deploy.yml'n  workflow_dispatch:n    inputs:n      action:n        description: 'Action to perform'n        required: truen        default: 'apply'n        type: choicen        options:n          - applyn          - destroynnenv:n  TF_VERSION: '1.5.0'n  AWS_REGION: 'us-east-1'nnpermissions:n  id-token: writen  contents: readnnjobs:n  terraform-plan:n    name: Terraform Plann    runs-on: ubuntu-latestn    n    steps:n    - name: Checkoutn      uses: actions/checkout@v4nn    - name: Configure AWS Credentialsn      uses: aws-actions/configure-aws-credentials@v4n      with:n        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}n        aws-region: ${{ env.AWS_REGION }}nn    - name: Setup Terraformn      uses: hashicorp/setup-terraform@v3n      with:n        terraform_version: ${{ env.TF_VERSION }}nn    - name: Terraform Initn      working-directory: ./terraformn      run: terraform initnn    - name: Terraform Format Checkn      working-directory: ./terraformn      run: terraform fmt -checknn    - name: Terraform Validaten      working-directory: ./terraformn      run: terraform validatenn    - name: Terraform Plann      working-directory: ./terraformn      run: terraform plan -out=tfplann      env:n        TF_VAR_environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}nn    - name: Upload Terraform Plann      uses: actions/upload-artifact@v4n      with:n        name: terraform-plann        path: ./terraform/tfplannn  terraform-apply:n    name: Terraform Applyn    runs-on: ubuntu-latestn    needs: terraform-plann    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')n    n    steps:n    - name: Checkoutn      uses: actions/checkout@v4nn    - name: Configure AWS Credentialsn      uses: aws-actions/configure-aws-credentials@v4n      with:n        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}n        aws-region: ${{ env.AWS_REGION }}nn    - name: Setup Terraformn      uses: hashicorp/setup-terraform@v3n      with:n        terraform_version: ${{ env.TF_VERSION }}nn    - name: Download Terraform Plann      uses: actions/download-artifact@v4n      with:n        name: terraform-plann        path: ./terraformnn    - name: Terraform Initn      working-directory: ./terraformn      run: terraform initnn    - name: Terraform Applyn      working-directory: ./terraformn      run: terraform apply -auto-approve tfplann      env:n        TF_VAR_environment: productionnn  terraform-destroy:n    name: Terraform Destroy (Manual)n    runs-on: ubuntu-latestn    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'n    n    steps:n    - name: Checkoutn      uses: actions/checkout@v4nn    - name: Configure AWS Credentialsn      uses: aws-actions/configure-aws-credentials@v4n      with:n        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}n        aws-region: ${{ env.AWS_REGION }}nn    - name: Setup Terraformn      uses: hashicorp/setup-terraform@v3n      with:n        terraform_version: ${{ env.TF_VERSION }}nn    - name: Terraform Initn      working-directory: ./terraformn      run: terraform initnn    - name: Terraform Destroyn      working-directory: ./terraformn      run: terraform destroy -auto-approven      env:n        TF_VAR_environment: production